--- xen-4.3.1/tools/libvchan/io.c.orig	2013-10-30 08:18:28.000000000 +0000
+++ xen-4.3.1/tools/libvchan/io.c	2014-12-03 00:35:31.613866698 +0000
@@ -111,12 +111,26 @@
 		return 0;
 }
 
+/*
+ * Get the amount of buffer space available, and do nothing about
+ * notifications.
+ */
+static inline int raw_get_data_ready(struct libxenvchan *ctrl)
+{
+        uint32_t ready = rd_prod(ctrl) - rd_cons(ctrl);
+        if (ready > rd_ring_size(ctrl))
+                /* We have no way to return errors.  Locking up the ring is
+                 * better than the alternatives. */
+                return 0;
+        return ready;
+}
+
 /**
  * Get the amount of buffer space available and enable notifications if needed.
  */
 static inline int fast_get_data_ready(struct libxenvchan *ctrl, size_t request)
 {
-	int ready = rd_prod(ctrl) - rd_cons(ctrl);
+	int ready = raw_get_data_ready(ctrl);
 	if (ready >= request)
 		return ready;
 	/* We plan to consume all data; please tell us if you send more */
@@ -126,7 +140,7 @@
 	 * will not get notified even though the actual amount of data ready is
 	 * above request. Reread rd_prod to cover this case.
 	 */
-	return rd_prod(ctrl) - rd_cons(ctrl);
+	return raw_get_data_ready(ctrl);
 }
 
 int libxenvchan_data_ready(struct libxenvchan *ctrl)
